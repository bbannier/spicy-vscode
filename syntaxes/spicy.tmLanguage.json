{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Spicy",
	"patterns": [
		{ "include": "#preproc" },
		{ "include": "#strings" },
		{ "include": "#regexps" },
		{ "include": "#builtins" },
		{ "include": "#typedecl" },
		{ "include": "#comments" },
		{ "include": "#visibility" },
		{ "include": "#type" },
		{ "include": "#keywords" }
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.spicy",
				"match": "\\b(if|while|for|return)\\b"
			}, {
				"name": "keyword.spicy",
				"match": "module"
			}, {
				"name": "constant.language",
				"match": "(True|False)"
			}, {
				"name": "support.function",
				"match": "\\b(function|hook)\\b"
			}, {
				"name": "keyword.control.import",
				"match": "import"
			}, {
				"name": "variable.language",
				"match": "\\b(self|\\$\\$)\\b"
			}, {
				"match": "(%(\\w+)(-\\w+))*\\s*(;|=)",
				"captures": {
					"1": { "name": "entity.other.attribute-name" }
				}
			}, {
				"match": "%\\w+",
				"name": "variable.function",
				"comment": "hook names like %done"
			}, {
				"match": "\\b(on)\\b",
				"name": "keyword.other"
			}, {
				"name": "keyword.operator",
				"match": "(\\+|-|\\*|/|\\+=|-=|\\*=|/=|\\+\\+|--|\\.|\\.\\?|\\?\\.|%)\\s"
			}
		]
		},
		"strings": {
			"name": "string.quoted.double.spicy",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape.spicy",
				"match": "\\\\."
			}, {
				"name": "constant.other.placeholder",
				"match": "\\b(%s|%d)\\b"
			}]
		},
		"comments": {
			"patterns": [{
				"name": "comment.line.spicy",
				"match": "#(.*)$"
			}]
		},
		"builtins": {
			"patterns": [{
				"name": "storage.type",
				"match": "\\b(u?int(8|16|32|64))\\b"
			}, {
				"name": "storage.type",
				"match": "\\b(bitfield|bytes|string)\\b"
			}, {
				"name": "support.function",
				"match": "\\b(print|assert|pack|unpack)\\b"
			}
		]},
		"typedecl": {
			"patterns": [{
				"name": "keyword.declaration.class",
				"match": "\\bunit\\b"
			}, {
				"name": "keyword.declaration.struct",
				"match": "\\bstruct\\b"
			}, {
				"name": "keyword.declaration.enum",
				"match": "\\benum\\b"
			}, {
				"name": "entity.other.attribute-name",
				"match": "\\s&\\w+\\b"
			}]
		},
		"visibility": {
			"patterns": [{
				"name": "storage.modifier",
				"match": "\\b(public|global|local)\\b"
			}]
		},
		"type": {
			"patterns": [{
				"name": "keyword.declaration.type",
				"match": "\\btype\\b"
			},
			{
				"name": "storage.type.spicy",
				"match": "\\bvar\\b"
			}]
		},
		"regexps": {
			"patterns": [{
				"name": "string.regexp.spicy",
				"match": "\\/(.*)\\/"
			}]
		},
		"preproc": {
			"patterns": [{
				"name": "keyword.other.spicy",
				"match": "@\\w+"
			}]
		}
	},
	"scopeName": "source.spicy"
}
